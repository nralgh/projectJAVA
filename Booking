import java.io.Serializable;
import javax.swing.JOptionPane;
public class Booking implements Serializable {
	private String name ;
	private String phoneNumber;
	private String ID;
	private Room room;
	private int startDay , startMonth , startYear;
	private int endDay ,endMonth , endYear;
	private int numOfDays;
	private double bill;
	private boolean isCheckedOut=false;
	private boolean isCancelled=false;
	
	
	public Booking (String name, String phoneNumber, String ID) {
		this.name =name;
		this.phoneNumber= phoneNumber;
		this.ID=ID;	}
public Booking (Booking B) {
	this.name = B.name;
	this.phoneNumber= B.phoneNumber;
	this.ID =B.ID;
	this.numOfDays= B.numOfDays;
	this.room= B.room;
	this.startDay=B.startDay;
	this.startMonth=B.startMonth;
	this.startYear=B.startYear;
	this.endDay=B.endDay;
	this.endMonth=B.endMonth;
	this.endYear=B.endYear;
	this.bill=B.bill;
}
//s=start , e=end
public boolean checkIn(Hotel hotel, Room room, int days, int sDay, int sMonth, int sYear, int eDay, int eMonth, int eYear) {
    if (!validateDate(sDay, sMonth, sYear, eDay, eMonth, eYear)) {
        System.out.println("Invalid date. Please try again.");
        return false;
    }

    
    if (hotel.isOverlapping(room, sDay, sMonth, sYear, eDay, eMonth, eYear)) {
        System.out.println("This room is already booked during the selected dates. Please choose another date or room.");
        return false;
    }

    numOfDays = days;
    this.room = room;
    startDay = sDay;
    startMonth = sMonth;
    startYear = sYear;
    endDay = eDay;
    endMonth = eMonth;
    endYear = eYear;
    
    bill = numOfDays * room.calculatePrice();

    return true;
}
public void checkOut() {
    if (isCancelled) {
        JOptionPane.showMessageDialog(null ,"The booking has already been cancelled, cannot check out.");
    } else if (isCheckedOut) {
        JOptionPane.showMessageDialog(null ,"You have already checked out.");
    } else {
        room.setAvailable(true);  
        room.setBooked(false);  
        isCheckedOut = true;
        JOptionPane.showMessageDialog(null ,"Check-out successful, Thank you for staying with us!");
    }
}

public void cancelBooking() {
    if (isCheckedOut) {
        System.out.println("You cannot cancel a booking after check-out.");
    } else if (isCancelled) {
        System.out.println("This booking has already been cancelled.");
    } else {
        room.setAvailable(true);  
        room.setBooked(false); 
        isCancelled = true;
       
    }
}
private boolean validateDate(int sDay, int sMonth, int sYear, int eDay, int eMonth, int eYear) {
   
    if (sMonth < 1 || sMonth > 12  || eMonth < 1 || eMonth > 12) {
        System.out.println("Invalid month.");
        return false;
    }

  
    if (sDay < 1 || sDay > getDaysInMonth(sMonth, sYear)) {
        System.out.println("Invalid start day.");
        return false;
    }

    if (eDay < 1 || eDay > getDaysInMonth(eMonth, eYear)) {
        System.out.println("Invalid end day.");
        return false;
    }
    int currentYear = 2025, currentMonth = 3, currentDay = 8; //current date
    if (sYear < currentYear ||
        (sYear == currentYear && sMonth < currentMonth) ||
        (sYear == currentYear && sMonth == currentMonth && sDay < currentDay)) {
        System.out.println(" Start date cannot be in the past.");
        return false;
    }

    if (eYear < sYear ||
        (eYear == sYear && eMonth < sMonth) ||
        (eYear == sYear && eMonth == sMonth && eDay <= sDay)) {
        System.out.println(" End date must be after start date.");
        return false;
    }

    return true; 
}
private int getDaysInMonth(int month, int year) {
    switch (month) {
        case 1: case 3: case 5: case 7: case 8: case 10: case 12:
            return 31;
        case 4: case 6: case 9: case 11:
            return 30;
        case 2:
            return isLeapYear(year) ? 29 : 28;
            default: 
            	return 0;
    }
    }
private boolean isLeapYear(int year) {
    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
}



public String toString() {
	return "Customer Name: "+name + 	" , ID: "+ID +
			" ,Customer phone number: "+ phoneNumber+
 "\n"+ room + "\nNumber of Days: " + numOfDays + " ,The bill: "+ bill+
 "\nStart date :"+startDay+"-"+startMonth+"-"+startYear+"\n"+
 "End date:"+ endDay+"-"+endMonth+"-"+endYear;
}
	public void setName(String name){
this.name=name;
}
public String getName(){
return name;
}
public void setID(String ID){
this.ID=ID;
}
public String getID (){
return ID;
}
public void setPhoneNumber(String phoneNumber){
this.phoneNumber=phoneNumber;
}
public String getPhoneNumber (){
return phoneNumber;
}

public void setRoom(Room room){
this.room=room;
}
public Room getRoom (){
return room;
}
public int getStartDay() {
	return startDay;
}
public int getStartMonth() {
	return startMonth;
}
public int getStartYear() {
	return startYear;
}
public int getEndDay() {
	return endDay;
}
public int getEndMonth() {
	return endMonth;
}
public int getEndYear() {
	return endYear;
}
public boolean isCheckedOut() {
	return isCheckedOut;
}
public boolean isCancelled() {
	return isCancelled;
}
}

	
